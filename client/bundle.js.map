{"version":3,"sources":["webpack:///webpack/bootstrap b5e45b1a24d5e6677109","webpack:///./client/js/game.js","webpack:///./client/js/setup.js","webpack:///./client/js/gui/createGoFullscreenButton.js","webpack:///./client/js/core/createOnResizeHandler.js","webpack:///./client/js/nautilus.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL,EAAC;;;;;;;;ACtDD;AACA;;AAEA;AACA;;AAEA;;AAEA,wCAAuC;AACvC,4CAA2C;AAC3C,wCAAuC;AACvC;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACnDA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;ACrCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,E;;;;;;AClCA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,wCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,E","file":"./client/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b5e45b1a24d5e6677109\n **/","'use strict'\r\n/*global PIXI */\r\n\r\nconst setup = require('./setup')\r\nconst createNautilusClient = require('./nautilus')\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    const assets = {}\r\n    const init = (stage) => {\r\n        assets.bunny = new PIXI.Sprite(PIXI.Texture.fromImage(\"/assets/bunny.png\"))\r\n\r\n        assets.bunny.anchor.x = 0.5\r\n        assets.bunny.anchor.y = 0.5\r\n\r\n        assets.bunny.position.x = 50\r\n        assets.bunny.position.y = 30\r\n        stage.addChild(assets.bunny)\r\n\r\n        const board = new PIXI.Container()\r\n\r\n        createNautilusClient({\r\n            host : 'ws://' + location.host,\r\n            onIndex : function(model){\r\n                console.log('received index object')\r\n                console.log(model)\r\n\r\n                model.board.data.forEach((el, i)=>{\r\n                    const tile = new PIXI.Sprite(PIXI.Texture.fromImage(\"/assets/bunny.png\"))\r\n                    tile.anchor.x = 0.5\r\n                    tile.anchor.y = 0.5\r\n                    tile.position.x = (i%model.board.width)*32\r\n                    tile.position.y = Math.floor(i/model.board.width)*32\r\n                    board.addChild(tile)\r\n                })\r\n\r\n                stage.addChild(board)\r\n            }\r\n        })\r\n    }\r\n\r\n    const update = (delta)=>{\r\n        assets.bunny.rotation += (delta/1000)\r\n    }\r\n\r\n    setup({\r\n        init: init,\r\n        update: update,\r\n        viewport : {\r\n            width : 1920,\r\n            height : 1080\r\n        },\r\n        scale : 4\r\n    })\r\n});\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/game.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict'\r\n/*global PIXI */\r\n\r\nconst createOnResizeHandler = require('./core/createOnResizeHandler')\r\nconst createGoFullscreenButton = require('./gui/createGoFullscreenButton')\r\n\r\nmodule.exports = function setup(spec){\r\n\r\n    const initCb = spec.init || (()=>{})\r\n    const updateCb = spec.update || (()=>{})\r\n    const viewport = spec.viewport || {width : 1920, height : 1080}\r\n    const scale = spec.scale\r\n\r\n    const ratio = viewport.width / viewport.height\r\n    const renderer = new PIXI.autoDetectRenderer(viewport.width, viewport.height,{\r\n        antialias : false\r\n    })\r\n    PIXI.SCALE_MODES.DEFAULT = PIXI.SCALE_MODES.NEAREST\r\n\r\n    const stage = new PIXI.Container()\r\n\r\n    stage.scale.x = scale\r\n    stage.scale.y = scale\r\n    stage.position.x = 0\r\n    stage.position.y = 0\r\n\r\n    document.body.appendChild(renderer.view)\r\n    document.body.appendChild(createGoFullscreenButton({\r\n        canvas : renderer.view\r\n    }))\r\n\r\n    window.onresize = createOnResizeHandler({\r\n        canvas : renderer.view,\r\n        ratio : ratio\r\n    })\r\n\r\n    initCb(stage)\r\n\r\n    let lastTime = Date.now()\r\n    let timeSinceLastFrame = 0\r\n\r\n    function animate() {\r\n        requestAnimationFrame(animate)\r\n        var now = Date.now()\r\n        timeSinceLastFrame = now - lastTime\r\n        updateCb(timeSinceLastFrame)\r\n        lastTime = now\r\n\r\n        renderer.render(stage)\r\n    }\r\n    requestAnimationFrame(animate)\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/setup.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict'\r\n\r\nmodule.exports = function createGoFullscreenButton(spec){\r\n\r\n    const canvas = spec.canvas\r\n    if(!canvas) {\r\n        throw 'canvas must not be undefined or null'\r\n    }\r\n\r\n    function RequestFullscreen(elem) {\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen()\r\n        }\r\n        else if (elem.msRequestFullscreen) {\r\n            elem.msRequestFullscreen()\r\n        }\r\n        else if (elem.mozRequestFullScreen) {\r\n            elem.mozRequestFullScreen()\r\n        }\r\n        else if (elem.webkitRequestFullscreen) {\r\n            elem.webkitRequestFullscreen()\r\n        }\r\n    }\r\n\r\n    var btn = document.createElement('BUTTON')\r\n    var t = document.createTextNode('Go To Fullscreen')\r\n    btn.appendChild(t)\r\n    btn.onclick = function(){\r\n        RequestFullscreen(canvas)\r\n    }\r\n    btn.style.position = 'absolute'\r\n    btn.style.left = '10px'\r\n    btn.style.top = '5px'\r\n    btn.style.height = '50px'\r\n    btn.style.opacity = '0.5'\r\n    \r\n    return btn\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/gui/createGoFullscreenButton.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict'\r\n\r\nfunction resize(canvas, ratio) {\r\n    let w = 0\r\n    let h = 0\r\n    let topOffset = 0\r\n    let leftOffset = 0\r\n    if (window.innerWidth / window.innerHeight >= ratio) {\r\n        w = window.innerHeight * ratio\r\n        h = window.innerHeight\r\n        leftOffset = (window.innerWidth - w)/2\r\n    } else {\r\n        w = window.innerWidth\r\n        h = window.innerWidth / ratio\r\n        topOffset = (window.innerHeight - h)/2\r\n    }\r\n    canvas.style.width = w + 'px'\r\n    canvas.style.height = h + 'px'\r\n    canvas.style.marginTop = topOffset + 'px'\r\n    canvas.style.marginLeft = leftOffset + 'px'\r\n}\r\n\r\nmodule.exports = function createOnResizeHandler(spec){\r\n    const canvas = spec.canvas\r\n    if(!canvas) {\r\n        throw 'canvas must not be undefined or null'\r\n    }\r\n    const ratio = spec.ratio\r\n\r\n    resize(canvas, ratio)\r\n\r\n    return function() {\r\n        resize(canvas, ratio)\r\n    }\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/core/createOnResizeHandler.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict'\r\n\r\nmodule.exports = function(conf) {\r\n    if(conf.onIndex === undefined) {\r\n        throw new Error('onIndex must be callback')\r\n    }\r\n    var socket = conf.socket || new WebSocket(conf.host)\r\n    var response = Object.create(null,{})\r\n    var objects = Object.create(null,{})\r\n    var id = 0\r\n    var index = undefined\r\n    \r\n    function send(msg){\r\n        console.log('=>')\r\n        console.log(msg)\r\n        socket.send(JSON.stringify(msg))\r\n    }\r\n\r\n    function createProxyMethod(object, objectName, method) {\r\n        var curr = object\r\n        method.forEach(function(node) {\r\n            if (curr[node] === undefined) {\r\n                curr[node] = function() {\r\n                    var currId = id++\r\n\r\n                    var promise = new Promise(function(resolve, reject) {\r\n                        response[currId] = {\r\n                            resolve: resolve,\r\n                            reject: reject\r\n                        }\r\n                    })\r\n                    var msg = {\r\n                        type : 'object-call',    \r\n                        path : method,\r\n                        name : objectName,\r\n                        id : currId,\r\n                        args : Array.prototype.slice.call(arguments, 0)\r\n                    }\r\n                    send(msg)\r\n                    return promise\r\n                }\r\n            }\r\n            else {\r\n                curr = curr[node]\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    function applyChange(object, change){\r\n        if(change.type === 'update'){\r\n            var curr = object\r\n            change.path.forEach(function(node){\r\n                if(change.path[change.path.length-1] === node){\r\n                    curr[node] = change.value\r\n                }\r\n                curr = curr[node]\r\n            })\r\n        } else if(change.type === 'splice'){\r\n            var curr = object\r\n            change.path.forEach(function(node){\r\n                if(change.path[change.path.length-1] === node){\r\n                    curr[node].splice.apply(curr[node],[change.index,change.removedCount].concat(change.added))\r\n                }\r\n                curr = curr[node]\r\n            })\r\n        }\r\n    }\r\n    \r\n    function applyChanges(object, changes){\r\n        changes.forEach(function(change){\r\n            applyChange(object, change)\r\n        })\r\n    }\r\n\r\n    var client = {\r\n        index: function() {\r\n            return index\r\n        }\r\n    }\r\n\r\n    socket.onopen = function(event) {\r\n        if (conf.onopen) conf.onopen(client);\r\n    }\r\n\r\n    socket.onmessage = function(event) {\r\n        function apply() {\r\n            var msg = JSON.parse(event.data)\r\n            console.log('<=')\r\n            console.log(msg)\r\n            if (msg.type === 'call-response') {\r\n                if(msg.synced === true && objects[msg.resultName] === undefined){\r\n                    msg.methods.forEach(function(method) {\r\n                        createProxyMethod(msg.result, msg.resultName, method)\r\n                    })\r\n                    if(msg.resultName === 'index'){\r\n                        conf.onIndex(msg.result)\r\n                    }\r\n                    objects[msg.resultName] = msg.result\r\n                }\r\n                \r\n                if(response[msg.id] !== undefined){\r\n                    response[msg.id].resolve(msg.result)\r\n                    delete response[msg.id]\r\n                }\r\n            }\r\n            if (msg.type === 'object-broadcast') {\r\n                console.log('applying changes')\r\n                var object = objects[msg.name]\r\n                if(object){\r\n                    applyChanges(object, msg.changes)\r\n                } else {\r\n                    console.log('object not found '+msg.name)\r\n                }\r\n            }\r\n        }\r\n        if (conf.onmessage) {\r\n            conf.onmessage(apply)\r\n        } else {\r\n            apply()\r\n        }\r\n        \r\n    }\r\n    return client\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/nautilus.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}