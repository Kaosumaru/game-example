{"version":3,"sources":["webpack:///webpack/bootstrap cb78a8958ef05265441c","webpack:///./client/js/game.js","webpack:///./client/js/setup.js","webpack:///./client/js/core/createOnResizeHandler.js","webpack:///./client/js/gui/createGoFullscreenButton.js","webpack:///./client/js/nautilus.js","webpack:///./client/js/core/createBoard.js","webpack:///./client/js/core/createConsole.js","webpack:///./client/js/core/createInterpreter.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;;AAGjB;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL,EAAC;;;;;;;;AC9ED;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT,wCAAuC;AACvC;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA2B,YAAY;AACvC,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;AChFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,E;;;;;;ACpCA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;ACrCA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,wCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,E;;;;;;AC5HA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA4B,IAAI;AAChC,wCAAuC,uDAAuD;AAC9F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,KAAK;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;;AAEA,UAAS;AACT;;AAEA;AACA;AACA;;;;;;;;ACzIA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,2DAA0D,iDAAiD;AAC3G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,KAAK;AAC/D,cAAa;AACb;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gCAA+B,YAAY;AAC3C;AACA;AACA","file":"./client/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cb78a8958ef05265441c\n **/","'use strict'\r\n/*global PIXI */\r\n\r\nconst setup = require('./setup')\r\nconst createNautilusClient = require('./nautilus')\r\nconst createBoard = require('./core/createBoard')\r\nconst createConsole = require('./core/createConsole')\r\nconst createInterpreter = require('./core/createInterpreter')\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    const debug = true\r\n    const init = (stage, resources, renderer) => {\r\n        createNautilusClient({\r\n            host: 'ws://' + location.host,\r\n            onIndex: function (model) {\r\n                const board = createBoard({\r\n                    model: model,\r\n                    resources: resources,\r\n                    debug : debug,\r\n                    stage : stage\r\n                })\r\n\r\n\r\n                const guiConsole = createConsole({\r\n                    renderer : renderer,\r\n                    stage : stage\r\n                })\r\n\r\n                const interpreter = createInterpreter({\r\n                    model: model\r\n                })\r\n\r\n                guiConsole.setInputListener((command)=>{\r\n                    const result = interpreter.interpret(command)\r\n                    if(result instanceof Promise){\r\n                        result.then((r)=>{\r\n                            guiConsole.writeLine(r)\r\n                        })\r\n                    } else {\r\n                        guiConsole.writeLine(result)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const update = (delta)=> {\r\n        //assets.bunny.rotation += (delta/1000)\r\n    }\r\n\r\n    setup({\r\n        assets: [\r\n            {\r\n                name: 'floor',\r\n                url: '/assets/img/Objects/Floor.png'\r\n            },\r\n            {\r\n                name: 'debug',\r\n                url: '/assets/img/Development/debug.png'\r\n            },\r\n            {\r\n                name: 'wall',\r\n                url: '/assets/img/Objects/Wall.png'\r\n            },\r\n            {\r\n                name: 'warrior',\r\n                url: '/assets/img/Commissions/Warrior.png'\r\n            }\r\n        ],\r\n        init: init,\r\n        update: update,\r\n        viewport: {\r\n            width: 1920,\r\n            height: 1080\r\n        },\r\n        scale: 3\r\n    })\r\n});\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/game.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict'\r\n/*global PIXI */\r\n\r\nconst createOnResizeHandler = require('./core/createOnResizeHandler')\r\nconst createGoFullscreenButton = require('./gui/createGoFullscreenButton')\r\n\r\nmodule.exports = function setup(spec) {\r\n\r\n    const assets = spec.assets || []\r\n    const initCb = spec.init || (()=> {\r\n        })\r\n    const updateCb = spec.update || (()=> {\r\n        })\r\n    const viewport = spec.viewport || {width: 1920, height: 1080}\r\n    const scale = spec.scale\r\n\r\n    const ratio = viewport.width / viewport.height\r\n    const renderer = new PIXI.autoDetectRenderer(viewport.width, viewport.height, {\r\n        antialias: false\r\n    })\r\n    PIXI.SCALE_MODES.DEFAULT = PIXI.SCALE_MODES.NEAREST\r\n\r\n    const stage = new PIXI.Container()\r\n\r\n    stage.scale.x = scale\r\n    stage.scale.y = scale\r\n    stage.position.x = 0\r\n    stage.position.y = 0\r\n\r\n    document.body.appendChild(renderer.view)\r\n    document.body.appendChild(createGoFullscreenButton({\r\n        canvas: renderer.view\r\n    }))\r\n\r\n    window.onresize = createOnResizeHandler({\r\n        canvas: renderer.view,\r\n        ratio: ratio\r\n    })\r\n\r\n    assets.forEach((el)=> {\r\n        PIXI.loader.add(el.name, el.url)\r\n    })\r\n\r\n    PIXI.loader\r\n        .on('progress', function (loader, loadedResource) {\r\n            console.log('Progress:', loader.progress + '%');\r\n        })\r\n        .after(function (resource, next) {\r\n            resource.frameWidth = 16\r\n            resource.frameHeight = 16\r\n            resource.frames = []\r\n\r\n            const height = resource.texture.height - (resource.texture.height%resource.frameHeight === 0 ? 0:resource.frameHeight)\r\n            const width = resource.texture.width - (resource.texture.width%resource.frameHeight === 0 ? 0:resource.frameHeight)\r\n\r\n            for (let y = 0; y < height; y += resource.frameHeight) {\r\n                for (let x = 0; x < width; x += resource.frameWidth) {\r\n                    resource.frames.push(new PIXI.Texture(resource.texture.baseTexture, new PIXI.Rectangle(x, y, resource.frameWidth, resource.frameHeight)));\r\n                }\r\n            }\r\n            next()\r\n        })\r\n        .load(function (loader, resources) {\r\n            initCb(stage, resources, renderer)\r\n        });\r\n\r\n    let lastTime = Date.now()\r\n    let timeSinceLastFrame = 0\r\n\r\n    function animate() {\r\n        requestAnimationFrame(animate)\r\n        var now = Date.now()\r\n        timeSinceLastFrame = now - lastTime\r\n        updateCb(timeSinceLastFrame)\r\n        lastTime = now\r\n\r\n        renderer.render(stage)\r\n    }\r\n\r\n    requestAnimationFrame(animate)\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/setup.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict'\r\n\r\nfunction resize(canvas, ratio) {\r\n    let w = 0\r\n    let h = 0\r\n    let topOffset = 0\r\n    let leftOffset = 0\r\n    if (window.innerWidth / window.innerHeight >= ratio) {\r\n        w = window.innerHeight * ratio\r\n        h = window.innerHeight\r\n        leftOffset = (window.innerWidth - w)/2\r\n    } else {\r\n        w = window.innerWidth\r\n        h = window.innerWidth / ratio\r\n        topOffset = (window.innerHeight - h)/2\r\n    }\r\n    canvas.style.width = w + 'px'\r\n    canvas.style.height = h + 'px'\r\n    canvas.style.marginTop = topOffset + 'px'\r\n    canvas.style.marginLeft = leftOffset + 'px'\r\n    //canvas.width = w;\r\n    //canvas.height = h;\r\n}\r\n\r\nmodule.exports = function createOnResizeHandler(spec){\r\n    const canvas = spec.canvas\r\n    if(!canvas) {\r\n        throw 'canvas must not be undefined or null'\r\n    }\r\n    const ratio = spec.ratio\r\n\r\n    resize(canvas, ratio)\r\n\r\n    return function() {\r\n        resize(canvas, ratio)\r\n    }\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/core/createOnResizeHandler.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict'\r\n\r\nmodule.exports = function createGoFullscreenButton(spec){\r\n\r\n    const canvas = spec.canvas\r\n    if(!canvas) {\r\n        throw 'canvas must not be undefined or null'\r\n    }\r\n\r\n    function RequestFullscreen(elem) {\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen()\r\n        }\r\n        else if (elem.msRequestFullscreen) {\r\n            elem.msRequestFullscreen()\r\n        }\r\n        else if (elem.mozRequestFullScreen) {\r\n            elem.mozRequestFullScreen()\r\n        }\r\n        else if (elem.webkitRequestFullscreen) {\r\n            elem.webkitRequestFullscreen()\r\n        }\r\n    }\r\n\r\n    var btn = document.createElement('BUTTON')\r\n    var t = document.createTextNode('Go To Fullscreen')\r\n    btn.appendChild(t)\r\n    btn.onclick = function(){\r\n        RequestFullscreen(canvas)\r\n    }\r\n    btn.style.position = 'absolute'\r\n    btn.style.left = '10px'\r\n    btn.style.top = '5px'\r\n    btn.style.height = '50px'\r\n    btn.style.opacity = '0.5'\r\n    \r\n    return btn\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/gui/createGoFullscreenButton.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict'\r\n\r\nmodule.exports = function(conf) {\r\n    if(conf.onIndex === undefined) {\r\n        throw new Error('onIndex must be callback')\r\n    }\r\n    var socket = conf.socket || new WebSocket(conf.host)\r\n    var response = Object.create(null,{})\r\n    var objects = Object.create(null,{})\r\n    var id = 0\r\n    var index = undefined\r\n    \r\n    function send(msg){\r\n        console.log('=>')\r\n        console.log(msg)\r\n        socket.send(JSON.stringify(msg))\r\n    }\r\n\r\n    function createProxyMethod(object, objectName, method) {\r\n        var curr = object\r\n        method.forEach(function(node) {\r\n            if (curr[node] === undefined) {\r\n                curr[node] = function() {\r\n                    var currId = id++\r\n\r\n                    var promise = new Promise(function(resolve, reject) {\r\n                        response[currId] = {\r\n                            resolve: resolve,\r\n                            reject: reject\r\n                        }\r\n                    })\r\n                    var msg = {\r\n                        type : 'object-call',    \r\n                        path : method,\r\n                        name : objectName,\r\n                        id : currId,\r\n                        args : Array.prototype.slice.call(arguments, 0)\r\n                    }\r\n                    send(msg)\r\n                    return promise\r\n                }\r\n            }\r\n            else {\r\n                curr = curr[node]\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    function applyChange(object, change){\r\n        if(change.type === 'update'){\r\n            var curr = object\r\n            change.path.forEach(function(node){\r\n                if(change.path[change.path.length-1] === node){\r\n                    curr[node] = change.value\r\n                }\r\n                curr = curr[node]\r\n            })\r\n        } else if(change.type === 'splice'){\r\n            var curr = object\r\n            change.path.forEach(function(node){\r\n                if(change.path[change.path.length-1] === node){\r\n                    curr[node].splice.apply(curr[node],[change.index,change.removedCount].concat(change.added))\r\n                }\r\n                curr = curr[node]\r\n            })\r\n        }\r\n    }\r\n    \r\n    function applyChanges(object, changes){\r\n        changes.forEach(function(change){\r\n            applyChange(object, change)\r\n        })\r\n    }\r\n\r\n    var client = {\r\n        index: function() {\r\n            return index\r\n        }\r\n    }\r\n\r\n    socket.onopen = function(event) {\r\n        if (conf.onopen) conf.onopen(client);\r\n    }\r\n\r\n    socket.onmessage = function(event) {\r\n        function apply() {\r\n            var msg = JSON.parse(event.data)\r\n            console.log('<=')\r\n            console.log(msg)\r\n            if (msg.type === 'call-response') {\r\n                if(msg.synced === true && objects[msg.resultName] === undefined){\r\n                    msg.methods.forEach(function(method) {\r\n                        createProxyMethod(msg.result, msg.resultName, method)\r\n                    })\r\n                    if(msg.resultName === 'index'){\r\n                        conf.onIndex(msg.result)\r\n                    }\r\n                    objects[msg.resultName] = msg.result\r\n                }\r\n                \r\n                if(response[msg.id] !== undefined){\r\n                    response[msg.id].resolve(msg.result)\r\n                    delete response[msg.id]\r\n                }\r\n            }\r\n            if (msg.type === 'object-broadcast') {\r\n                console.log('applying changes')\r\n                var object = objects[msg.name]\r\n                if(object){\r\n                    applyChanges(object, msg.changes)\r\n                } else {\r\n                    console.log('object not found '+msg.name)\r\n                }\r\n            }\r\n        }\r\n        if (conf.onmessage) {\r\n            conf.onmessage(apply)\r\n        } else {\r\n            apply()\r\n        }\r\n        \r\n    }\r\n    return client\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/nautilus.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict'\r\n/*global PIXI */\r\n\r\nmodule.exports = function createBoard(spec){\r\n    const model = spec.model\r\n    const debug = spec.debug\r\n    const resources = spec.resources\r\n    const stage = spec.stage;\r\n\r\n    const board = new PIXI.Container()\r\n\r\n    board.position.x = 48\r\n    board.position.y = 48\r\n\r\n    model.board.data.forEach((el, i)=> {\r\n\r\n        const tile = new PIXI.Container()\r\n        tile.position.x = (i % model.board.width) * resources.floor.frameWidth\r\n        tile.position.y = Math.floor(i / model.board.width) * resources.floor.frameHeight\r\n\r\n        if(el.layers.floor !== ''){\r\n            const sp = el.layers.floor.split('_')\r\n            const floor = new PIXI.Sprite(resources[sp[0]].frames[sp[1]])\r\n            tile.addChild(floor)\r\n        }\r\n\r\n        if(el.layers.middle !== ''){\r\n            const sp = el.layers.middle.split('_')\r\n            const middle = new PIXI.Sprite(resources[sp[0]].frames[sp[1]])\r\n            tile.addChild(middle)\r\n        }\r\n\r\n        if(el.layers.ceiling !== ''){\r\n            const sp = el.layers.middle.split('_')\r\n            const ceiling = new PIXI.Sprite(resources[sp[0]].frames[sp[1]])\r\n            tile.addChild(ceiling)\r\n        }\r\n\r\n        if(debug === true && el.obstacle === true){\r\n            const debug = new PIXI.Sprite(resources.debug.frames[0])\r\n            tile.addChild(debug)\r\n        }\r\n\r\n        board.addChild(tile)\r\n    })\r\n\r\n    stage.addChild(board)\r\n\r\n    return {\r\n\r\n    }\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/core/createBoard.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\r\n * Created by odrin on 14.09.2015.\r\n */\r\n\"use strict\";\r\n/*global PIXI */\r\n/*global EZGUI */\r\n\r\nmodule.exports = function createConsole(spec){\r\n    const renderer = spec.renderer\r\n    const stage = spec.stage\r\n    const numberOfLines = spec.numberOfLines || 11\r\n    const maxLineLength = spec.maxLineLength || 60\r\n\r\n    let inputListener = ()=>{}\r\n    const guiConsole = new PIXI.Container()\r\n    guiConsole.visible = false\r\n    const lines = []\r\n    const history = []\r\n    let historyPointer = 0\r\n\r\n    for(let i=numberOfLines;i>0;--i){\r\n        const line = new PIXI.Text('',{font : '20px Arial', fill : 0xffffff, align : 'center'});\r\n        line.position.x = 15\r\n        line.position.y = 10 + i*25\r\n        lines.push(line);\r\n        guiConsole.addChild(line)\r\n    }\r\n\r\n    var guiBtn = {\r\n        id: 'sendButton',\r\n        text: 'Send',\r\n        component: 'Button',\r\n        skin: 'bluebutton',\r\n        padding: 4,\r\n        position: { x: 535, y: 315 },\r\n        width: 90,\r\n        height: 30\r\n    }\r\n\r\n    const guiInput = {\r\n        id: 'commandInput',\r\n        text: '',\r\n        component: 'Input',\r\n        position: { x: 10, y: 315 },\r\n        width: 520,\r\n        height: 30\r\n    }\r\n\r\n    const commit = () => {\r\n        history.push(EZGUI.components.commandInput.text)\r\n        historyPointer = history.length\r\n        inputListener(EZGUI.components.commandInput.text)\r\n        EZGUI.components.commandInput.text = \"\"\r\n    }\r\n\r\n    EZGUI.renderer = renderer;\r\n    EZGUI.Theme.load(['/assets/ezgui/kenney-theme/kenney-theme.json'], function () {\r\n        var sendBtn = EZGUI.create(guiBtn, 'kenney')\r\n        var inputBtn = EZGUI.create(guiInput, 'kenney')\r\n        EZGUI.components.sendButton.on('click', function (event) {\r\n            commit()\r\n        })\r\n        guiConsole.addChild(sendBtn)\r\n        guiConsole.addChild(inputBtn)\r\n    })\r\n\r\n    stage.addChild(guiConsole)\r\n\r\n\r\n    window.onkeyup = function(e) {\r\n        var key = e.keyCode ? e.keyCode : e.which\r\n\r\n        if (key === 192 /* ` */) {\r\n            e.preventDefault()\r\n            guiConsole.visible = !guiConsole.visible\r\n            EZGUI.components.commandInput.text = \"\"\r\n        }\r\n        else if (key === 13/*enter*/ && guiConsole.visible) {\r\n            e.preventDefault()\r\n            commit()\r\n        }\r\n        else if(key === 38 /*up*/) {\r\n            historyPointer--\r\n            if(history.length !== 0 && historyPointer < history.length && historyPointer >= 0){\r\n                EZGUI.components.commandInput.text = history[historyPointer]\r\n            } else {\r\n                historyPointer++\r\n            }\r\n        }\r\n        else if(key === 40 /* down */){\r\n            historyPointer++\r\n            if(history.length !== 0 && historyPointer >= 0){\r\n                if(historyPointer < history.length){\r\n                    EZGUI.components.commandInput.text = history[historyPointer]\r\n                } else {\r\n                    EZGUI.components.commandInput.text = ''\r\n                    historyPointer = history.length\r\n                }\r\n            } else {\r\n                historyPointer--\r\n            }\r\n        }\r\n    }\r\n\r\n    const write = (text)=>{\r\n        for(let i=lines.length-1; i>0;--i){\r\n            lines[i].text = lines[i-1].text\r\n        }\r\n        lines[0].text = text\r\n    }\r\n\r\n    return {\r\n        writeLine(text){\r\n            const words = text.split(' ')\r\n            while(words.length !== 0){\r\n                let line = words.splice(0,1);\r\n                while(words.length !== 0 && line.length+words[0].length+1 < maxLineLength){\r\n                    line = line+' '+words.splice(0,1)\r\n                }\r\n                if(line > maxLineLength){\r\n                    const parts = line.slice(maxLineLength)\r\n                    line = parts[0]\r\n                    words.splice(0,0,line[1])\r\n                }\r\n                write(line)\r\n            }\r\n        },\r\n        setInputListener(il){\r\n            inputListener = il\r\n        },\r\n        show(){\r\n\r\n        },\r\n        hide(){\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/core/createConsole.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\r\n * Created by odrin on 15.09.2015.\r\n */\r\n'use strict'\r\n\r\nmodule.exports = function createInterpreter(spec){\r\n\r\n    const model = spec.model\r\n\r\n    const commands = new Map()\r\n    const Any = Symbol()\r\n\r\n    function isNumeric(n) {\r\n        return !isNaN(parseFloat(n)) && isFinite(n);\r\n    }\r\n\r\n    const validateFormat = (args,format)=>{\r\n        return format.every((el,i)=>{\r\n            if(el === Number){\r\n                return isNumeric(args[i])\r\n            }\r\n            if(el === String){\r\n                return args[i] !== undefined\r\n            }\r\n            if(el === Any){\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    const getUseExample = (command, format) => {\r\n        return command + ' '+format.reduce((prev, curr)=>{return prev+' <'+(curr===Any?'?':curr.name)+'> '},\"\")\r\n    }\r\n\r\n    commands.set('help', {\r\n        format : [Any],\r\n        description : 'Prints help about given command or list of available commands.',\r\n        handler:(args)=> {\r\n            if (args.length === 0) {\r\n                const keys = [];\r\n                for (let key of commands.keys()) {\r\n                    keys.push(key)\r\n                }\r\n                return `You can use following commands: ${keys}. Type help <command> to find more information.`\r\n            } else if(args.length === 1 && commands.has(args[0])){\r\n                return getUseExample(args[0],commands.get(args[0]).format) +': '+ commands.get(args[0]).description\r\n            }\r\n        }\r\n    })\r\n\r\n    commands.set('createBoard', {\r\n        format : [String,Number,Number],\r\n        description : 'Creates new empty board with given name and dimensions.',\r\n        handler : (args)=>{\r\n            return model.createBoard({\r\n                name : args[0],\r\n                width : args[1],\r\n                height : args[2]\r\n            })\r\n        }\r\n    })\r\n\r\n    commands.set('loadBoard', {\r\n        format : [String],\r\n        description : 'Loads given board into current game.',\r\n        handler : (args)=>{\r\n            return model.loadBoard({\r\n                name : args[0],\r\n                width : args[1],\r\n                height : args[2]\r\n            })\r\n        }\r\n    })\r\n\r\n    commands.set('setTileTex', {\r\n        format : [Number, Number, String, String],\r\n        description : 'Set tile at given location, layer to new texture.',\r\n        handler : (args)=>{\r\n            return model.setTileTex({\r\n                position : {\r\n                    x : args[0],\r\n                    y : args[1]\r\n                },\r\n                layer : args[2],\r\n                newTex : args[3]\r\n            })\r\n        }\r\n    })\r\n\r\n    return {\r\n        interpret(command){\r\n            const comParts = command.split(' ')\r\n            const cmdDescr = commands.get(comParts[0])\r\n            if(cmdDescr) {\r\n                const args = comParts.slice(1,comParts.length)\r\n                if(validateFormat(args,cmdDescr .format)){\r\n                    return cmdDescr.handler(args)\r\n                } else {\r\n                    return commands.get('help').handler([comParts[0]])\r\n                }\r\n            }\r\n            return `Command '${comParts[0]}' not found! Type help to get list of commands.`\r\n        }\r\n    }\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/core/createInterpreter.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}